document()
library(devtools)
document()
devtools::document()
datos_prueba <- matrix(rnorm(100), nrow=10, ncol=10)
pca_realized(datos_prueba)
### pCA
#' @param datos base de datos a emplear para el proceso
#' @param datos base de datos a emplear para el proceso
#' @param escala Booleano: si TRUE, estandariza las variables
#' @param n_comp Numero de componentes principales a extraer (opcional)
#' @param datos base de datos a emplear para el proceso
#' @param escala Booleano: si TRUE, estandariza las variables
#' @param n_comp Numero de componentes principales a extraer (opcional)
#' @param centrar Booleano: si TRUE, centra los datos antes del PCA
#' @return Una lista con tres elementos:
#' @param datos base de datos a emplear para el proceso
#' @param escala Booleano: si TRUE, estandariza las variables
#' @param n_comp Numero de componentes principales a extraer (opcional)
#' @param centrar Booleano: si TRUE, centra los datos antes del PCA
#' @return Una lista con tres elementos:
#'   \item{resumen}{Resumen del PCA (output de summary(prcomp()).}
#'   \item{componentes}{Matriz con las coordenadas de los datos en los nuevos ejes principales.}
#' @param datos base de datos a emplear para el proceso
#' @param escala Booleano: si TRUE, estandariza las variables
#' @param n_comp Numero de componentes principales a extraer (opcional)
#' @param centrar Booleano: si TRUE, centra los datos antes del PCA
#' @return Una lista con tres elementos:
#'   \item{resumen}{Resumen del PCA (output de summary(prcomp()).}
#'   \item{componentes}{Matriz con las coordenadas de los datos en los nuevos ejes principales.}
#'   \item{var_exp}{Vector con la varianza explicada por cada componente.}
#' @export
pca_realized <- function(datos, escala=TRUE, n_comp=NULL){
2
2
2
2+2
pca_realized <- function(datos, escala=TRUE, n_comp=NULL){
stop("Las variables deben ser numericas para realizar PCA")
if (!all(sapply(datos, is.numeric))) {
stop("Las variables deben ser numericas para realizar PCA")
}
componentesp <- prcomp(datos, center=TRUE, scale.=escala)
if (is.null(n_comp)){
n_comp <- min(ncol(datos), nrow(datos)-1)
} else {
n_comp <- min(n_comp, ncol(componentesp$x))
}
var_exp <- (componentesp$sdev^2) / sum(componentesp$sdev^2)
return(list(
resumen = summary(componentesp),
componentes = componentesp$x[,1:n_comp, drop = FALSE],
var_exp = var_exp[1:n_comp]
))
}
devtools::document()
